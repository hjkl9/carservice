syntax = "v1"

import "common.api"
import "sms.api"
import "user.api"
import "car_brand.api"
import "car_brand_series.api"
import "car_owner_info.api"

info(
	title: "Carservice"
	author: "hjkl1"
	email: "nil"
	version: "v0.0.11"
)

type (
	// RootReq {}
	// RootRep {
	// 	AppName string `json:"appName"`
	// 	GoVersion string `json:"goVersion"`
	// }

	PingReq {
		HttpCode int `form:"httpCode, default=200"`
	}
	PingRep {
		Result string `json:"result"`
	}

	PingDbReq {
		AsResult string `form:"asResult, default=carservice"`
	}
	PingDbRep {
		Result string `json:"result"`
	}
)

service carservice {
	// // todo: should generate code.
	// @doc(
	// 	summary: "show basiclly server info."
	// )
	// @handler Root
	// get / (RootReq) returns (RootRep)
	
	@doc(
		summary: "检查服务器状态"
	)
	@handler Ping
	get /ping (PingReq) returns (PingRep)
	
	@doc(
		summary: "检查数据库在服务器中的状态，已经在中间件中被使用"
	)
	@handler PingDb
	get /pingDb (PingDbReq) returns (PingDbRep)
}